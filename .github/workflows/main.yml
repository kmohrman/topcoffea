name: CI

on:
  push:
  schedule:
    - cron: '0 1 * * *' # Test every day at 1AM
  
jobs:

  flake8-lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v1
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          ignore: "E201,E227,E261,E231,E501,E241,E203,E241,E202,E226,E221"
          # E201 whitespace after '('
          # E227 missing whitespace around bitwise or shift operator
          # E261 at least two spaces before inline comment
          # E231
          # E501 line too long
          # E241 multiple spaces after
          # E203 whitespace before ':'
          # E241 multiple spaces after ','
          # E202 whitespace before ')'
          # E226 missing whitespace around arithmetic operator
          # E221 multiple spaces before operator

          #select: "E111"
          #ignore:
          #  "
          #  E231,
          #  E501
          #  "

  #flake8_py3:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Setup Python
  #      uses: actions/setup-python@v1
  #      #with:
  #      #  python-version: 3.7.4
  #      #  architecture: x64
  #    - name: Checkout PyTorch
  #      uses: actions/checkout@master
  #    - name: Install flake8
  #      run: pip install flake8
  #    - name: Run flake8
  #      uses: suo/flake8-github-action@releases/v1
  #      with:
  #        checkName: 'flake8_py3'   # NOTE: this needs to be the same as the job name
  #      # env:
  #      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  #Full_Analysis:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout repository
  #      uses: actions/checkout@v2

  #    - name: Add conda to system path
  #      run: |
  #        echo $CONDA/bin >> $GITHUB_PATH 

  #    - name: Install dependencies
  #      run: |
  #        conda config --set channel_priority strict
  #        conda config --add channels conda-forge
  #        conda env create -f environment.yml -n coffea-env

  #    - name: Conda list
  #      run: |
  #        conda list -n coffea-env

  #    - name: Install topcoffea package
  #      run: |
  #        conda run -n coffea-env pip install -e .

  #    - name: Download root files
  #      run: |
  #        wget --no-verbose http://www.crc.nd.edu/~kmohrman/files/root_files/for_ci/ttHJet_UL17_R1B14_NAOD-00000_10194_NDSkim.root

  #    - name: Pytest setup
  #      run: |
  #        conda install -y -n coffea-env -c conda-forge pytest pytest-cov root_base
  #        mkdir histos

  #    - name: Test unit
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_unit.py

  #    - name: Test histEFT
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_HistEFT_add.py

  #    - name: Test utils
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_utils.py

  #    - name: Test update json
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_update_json.py

  #    - name: Test make 1d quad plots
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_make_1d_quad_plots.py 

  #    - name: Run processors over test files with futures executor
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_futures.py

  #    - name: Get yields 
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append -k test_make_yields_after_processor

  #    - name: Compare yields
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append -k test_compare_yields_after_processor

  #    - name: Run processors over test files with workqueue executor
  #      run: |
  #        conda run -n coffea-env pytest --cov=./ --cov-report=xml -rP --cov-append tests/test_workqueue.py


  #    - name: Upload coverage to Codecov
  #      uses: codecov/codecov-action@v2
  #      with:
  #        token: ${{ secrets.CODECOV_TOKEN }}
  #        directory: ./coverage/reports/
  #        env_vars: OS,PYTHON
  #        fail_ci_if_error: true
  #        files: ./coverage.xml
  #        flags: unittests
  #        name: codecov-umbrella
  #        verbose: true
